[{"path":"https://dlforrister.github.io/ecoMET_webpage/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Dale L. Forrister. Author. Min-Soo Choi. Author, maintainer.","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Forrister D, Choi M (2025). ecomet: Tool Mass Spectrometry–Based Ecological Metabolomics. R package version 0.0.0.9000, https://dlforrister.github.io/ecoMET_webpage/.","code":"@Manual{,   title = {ecomet: A Tool for Mass Spectrometry–Based Ecological Metabolomics},   author = {Dale L. Forrister and Min-Soo Choi},   year = {2025},   note = {R package version 0.0.0.9000},   url = {https://dlforrister.github.io/ecoMET_webpage/}, }"},{"path":"https://dlforrister.github.io/ecoMET_webpage/index.html","id":"ecomet","dir":"","previous_headings":"","what":"A Tool for Mass Spectrometry–Based Ecological Metabolomics","title":"A Tool for Mass Spectrometry–Based Ecological Metabolomics","text":"eCOMET platform processing LC-MS/MS data chemical ecology. gets input MZMine SIRIUS. major toolboxes eCOMET follows:","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"A Tool for Mass Spectrometry–Based Ecological Metabolomics","text":"can install development version ecomet GitHub : basic example shows solve common problem:","code":"# install.packages(\"pak\") pak::pak(\"dlforrister/ecoMET_webpage\") library(ecomet) ## basic example code"},{"path":"https://dlforrister.github.io/ecoMET_webpage/index.html","id":"id_0-input","dir":"","previous_headings":"","what":"0. Input","title":"A Tool for Mass Spectrometry–Based Ecological Metabolomics","text":"Following input files required. See ‘/raw_data’ demo files. 1) Feature quantification table generated MZMine4 (features.csv) file generated [Feature list methods → Export feature list → CSV]. See https://mzmine.github.io/mzmine_documentation/module_docs/io/feat-list-export.html 2) Annotation features SIRIUS (canopus_formula_summary.tsv structure_identification.tsv) included standard output SIRIUS. Make sure run SIRIUS → ZODIAC → CSI:FingerID → CANOPUS. export tsv. 3) Metadata samples (metadata.csv) Metadata three columns; first three sample, group, mass. Additional information can provided (see Part 9. Regression metadata). 4) (Optional) Custom annotation features (‘custom_DB_glucosinolates.csv’) custom DB includes three columns: compound, mz, rt 5) (Optional) Chemical similarity table MZMine 4. metric can cosine, DreaMS, MS2DeepScore (cosine.csv, dreams.csv, ms2deepscore.csv) obtain data, need run molecular networking MZMine4 metric. See https://mzmine.github.io/mzmine_documentation/module_docs/group_spectral_net/molecular_networking.html Set minimal similarity value 0 get pairwise similarity. tables impoted processed heatmap visualization chemical diversity quantification (see 10. Chemical Diversity Measures) demo files metabolomics analysis files Arabidopsis thaliana (Col-0) attacked two different herbivores (Spodoptera litura; sl, Lipaphis erysimi; le). Eight replicates sampled analyzed group. See metadata.csv details.","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/index.html","id":"id_1-initializing-the-mmo-object","dir":"","previous_headings":"","what":"1. Initializing the MMO object","title":"A Tool for Mass Spectrometry–Based Ecological Metabolomics","text":"input files imported construct mmo object. mmo object used downstream statistics. First import mzmine feature list metadata create mmo object. mmo <- GetMZmineFeature(mzmine_featuredir, metadatadir) head(mmo$featre_data) add annotation generated sirius object mmo <- AddSiriusAnnot(mmo, canopus_structuredir, canopus_formuladir) head(mmo$sirius_annot) Custom annotation can added based m/z RT. mmo <- AddCustomAnnot(mmo, DB = gls_db, mztol = 5, rttol = 0.1) # Add annotation process quantification data chemical similarity tables imported transformed distance matrix # Import chemical distance data chemical diversity analyses mmo <- AddChemDist(mmo, cos_dir = cos_dir, dreams_dir = dreams_dir, m2ds_dir = m2ds_dir) Check every data imported well summary(mmo)","code":"### # 1.1. Give directories mzmine_featuredir <- 'raw_data/250724_features_ms2.csv' metadatadir <- \"raw_data/250728_mmo_metadata.csv\" canopus_formuladir <- \"raw_data/canopus_formula_summary.tsv\" canopus_structuredir <- \"raw_data/structure_identifications.tsv\" gls_db <- 'raw_data/250428_GLS_Ath_simplegrad_MMO.csv' cos_dir <- 'raw_data/250728_sim_ms2_(modified)_cosine.csv' dreams_dir <- 'raw_data/250728_sim_dreams.csv' m2ds_dir <- 'raw_data/250728_sim_ms2deepscore.csv' # Normalize data mmo <- ReplaceZero(mmo, method = 'one') # Replace 0 and NA values by 1 mmo <- MassNormalization(mmo) # Normalize peak area by sample mass in metadata mmo <- MeancenterNormalization(mmo) # Add mean-centered area mmo <- LogNormalization(mmo) # Add log-transformed area mmo <- ZNormalization(mmo) # Add Zscore"},{"path":"https://dlforrister.github.io/ecoMET_webpage/index.html","id":"mmo-object","dir":"","previous_headings":"1. Initializing the MMO object","what":"mmo object","title":"A Tool for Mass Spectrometry–Based Ecological Metabolomics","text":"mmo object contains following information 1) Feature quantification value (featuredata)2)Metadata(feature_data) 2) Metadata (metadata) 3) Pairwise comparison data (pairwise)4)Log,mean−centered,andZ−transformedfeaturequantificationvalue(pairwise) 4) Log, mean-centered, Z-transformed feature quantification value (log, $meancentered, #zscore) 5) Sirius annotation ($sirius_annot) 6) cosine distance (cos.dissim)7)DreaMSdistance(cos.dissim) 7) DreaMS distance (dreams.dissim) 8) MS2DeepScore distance (m2ds.dissim) features id (mzmine) feature (mz_rt generated GetMZmineFeature()). can interchangable FeatureToID(mmo, features) IDToFeature(mmo, IDs).","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/index.html","id":"annotated-features-by-sirius","dir":"","previous_headings":"1. Initializing the MMO object","what":"Annotated features by SIRIUS","title":"A Tool for Mass Spectrometry–Based Ecological Metabolomics","text":"feature groups may deserve particular interest. demo file, glucosinolates flavonoids . can briefly annotate metabolites using annotation sirius.","code":"features <- mmo$sirius_annot # Get list of glucosinolated using custom annoatation DB gls_hits <- mmo$custom_annot %>% filter(lengths(custom_annot) > 0) GLSs <- gls_hits %>% pull(feature) # Get list of flavonoids using sirius annotation FLVs <- features %>% filter(str_detect(features[[46]], \"Flavonoid\")) %>% pull(feature)"},{"path":"https://dlforrister.github.io/ecoMET_webpage/index.html","id":"id_2-summarise-using-pls-da","dir":"","previous_headings":"","what":"2. Summarise using PLS-DA","title":"A Tool for Mass Spectrometry–Based Ecological Metabolomics","text":"using PLS-DA plot, general distribution metabolic profile sample group can visualized. group give colors plot PLS-DA  topk parameter can adjusted plot loadings top features plot. normalization can None, Log, Meancentered, Z. subset features used ploting, set filter_feature = TRUE provide list features feature_list subset groups plotted, set ‘filter_group = TRUE’ provide list groups group_list.","code":"# Define your custom colors for each group custom_colors <- c(\"ctrl\" = \"#999999\", \"sl1\" = \"#fdcdac\", \"le1\" = \"#b3e2cd\") #Or automatically give colors custom_colors <- setNames(brewer.pal(length(unique(mmo$metadata$group)), \"Set3\"), unique(mmo$metadata$group)) PLSDAplot(mmo, color = custom_colors, outdir = 'plots/plsda/PLSDA_Z.pdf', normalization = 'Z') PLSDAplot(mmo, color = custom_colors, topk = 0, outdir = 'plots/plsda/PLSDA_Z_noLoadings.pdf', normalization = 'Z') # Glucosinolates only PLSDAplot(mmo, custom_colors, topk = 0, outdir = 'plots/plsda_GLS.pdf', normalization = 'Z', filter_feature = TRUE, feature_list = GLSs)"},{"path":"https://dlforrister.github.io/ecoMET_webpage/index.html","id":"id_3-pairwise-comparison-dams","dir":"","previous_headings":"","what":"3. Pairwise Comparison (DAMs)","title":"A Tool for Mass Spectrometry–Based Ecological Metabolomics","text":"Many analyses targets find Differentially Accumulated Metabolites (DAMs). DAMs can defined thresholds log2-fold change adjusted p-value. two metrics calculated following code. Note divisor group left. # 3.1. Add pairwise comparisons mmo <- PairwiseComp(mmo, 'ctrl', 'sl1') mmo <- PairwiseComp(mmo, 'ctrl', 'le1') DAMs comparison can extracted. cutoffs DAMs can adjusted GetDAMs function","code":"# 3.2. Get DAMs from the comparisons DAMs <- GetDAMs(mmo, fc_cutoff = 0.5849625, pval_cutoff = 0.1) # log2(1.5) = 0.5849625 DAMs_up <- DAMs$DAMs_up DAMs_down <- DAMs$DAMs_down head(DAMs_up)"},{"path":"https://dlforrister.github.io/ecoMET_webpage/index.html","id":"id_4-upset-and-venn-diagram","dir":"","previous_headings":"","what":"4. Upset and Venn Diagram","title":"A Tool for Mass Spectrometry–Based Ecological Metabolomics","text":"many features overlapping specific common questions following DAM analysis. can visualized UpSet plot Venn diagram. inputs identical can prepared following can plotted following","code":"# 4.1. Define groups VennInput <- list(   sl1.up = DAMs_up$ctrl_vs_sl1.up,   le1.up = DAMs_up$ctrl_vs_le1.up ) # 4.2. Plot # 4.2.1. Venn Diagram ggvenn(VennInput, stroke_size = 0.5, set_name_size = 4, show_percentage = FALSE) +   theme(legend.position = \"none\")  ggsave(\"plots/Venn/Venn_Upreg.pdf\", height = 5, width = 5)    # 4.2.2. Upset plot pdf(\"plots/Venn/Upset_Upreg.pdf\", 7, 5) upset(fromList(VennInput), nsets=10, nintersects=20,order.by='freq', mainbar.y.label='Features in Set', line.size=1, point.size=4, shade.color='white', text.scale=1, show.numbers=FALSE) dev.off()"},{"path":"https://dlforrister.github.io/ecoMET_webpage/index.html","id":"id_5-volcano-plot","dir":"","previous_headings":"","what":"5. Volcano plot","title":"A Tool for Mass Spectrometry–Based Ecological Metabolomics","text":"pairwise comparion can visualized volcano plot. Following code generates volcano plots comparison made section 3.","code":"comparison_columns <- colnames(mmo$pairwise) log2FC_columns <- grep(\"log2FC\", comparison_columns, value = TRUE) comparisons <- sub(\"_$\", \"\", unique(sub(\"log2FC\", \"\", log2FC_columns)))  # Remove trailing underscore from comparisons for (comp in comparisons){   VolcanoPlot(mmo, comp = comp, topk = 10, outdir = paste('plots/volcano/volcano_', comp, '.pdf', sep = '')) }"},{"path":"https://dlforrister.github.io/ecoMET_webpage/index.html","id":"id_6-heat-map","dir":"","previous_headings":"","what":"6. Heat Map","title":"A Tool for Mass Spectrometry–Based Ecological Metabolomics","text":"heatmap great way visualize whole metabolome. Typically features clustered distribution pattern alternatively chemical similarity features can visualized. heatmap, required inputs can generated mmo follows: filter_feature filter_group can used desire. ‘summarize’ argument can ‘mean’ ‘fold_change’. ‘fold_change’ used, ‘control_group’ noted. chemical similarities plotted, distance metric used designated ‘distance’ one dreams, cosine, m2ds. class-level annotation table generated. ann_colors plotted along heapmap show chemical class features included . heatmap can visualized follows:","code":"# 6.1. Generate inputs for heat map HMinput <- GenerateHeatmapInputs(mmo, filter_feature = FALSE, feature_list = feature_list,                                  filter_group = FALSE, group_list = group_list,                                  summarize = 'mean', control_group = 'ctrl',                                  normalization = 'Z', distance = 'dreams') summary(HMinput) # 6.2. Generate NPC-based annotation table for heatmap sirius_annot <- mmo$sirius_annot # Get NPC Annotations NPC_pathway <- unique(sirius_annot[[32]]) NPC_pathway <- NPC_pathway[!is.na(NPC_pathway) & NPC_pathway != \"\"] # remove NA and empty  NPC_superclass <- unique(sirius_annot[[34]]) NPC_superclass <- NPC_superclass[!is.na(NPC_superclass) & NPC_superclass != \"\"] # remove NA and empty NPC_class <- unique(sirius_annot[[36]]) NPC_class <- NPC_class[!is.na(NPC_class) & NPC_class != \"\"] # remove NA and empty  sirius_annot_filtered <- sirius_annot %>%   # select(id = 1, NPC_pathway = 30, NPC_class = 34) %>%   select(id = 1, NPC_class = 36, NPC_superclass = 34, NPC_pathway = 32) %>%   # select(id = 1, NPC_pathway = 30, NPC_superclass = 32) %>%   filter(id %in% rownames(distance_matrix)) # get features with fingerprints  rownames(sirius_annot_filtered) <- sirius_annot_filtered$id sirius_annot_filtered$id <- NULL  ann_colors = list(     NPC_pathway = setNames(brewer.pal(length(NPC_pathway), \"Set2\"), NPC_pathway),     NPC_class = setNames(viridis(length(NPC_class)), NPC_class),     NPC_superclass = setNames(viridis(length(NPC_superclass)), NPC_superclass)     ) pdf(\"plots/heatmap/dreams_total_Z.pdf\", width = 15, height = 20) pheatmap(mat = HMinput$FC_matrix,       cluster_rows = TRUE, #do not change      clustering_distance_rows = HMinput$dist_matrix, # Delete this line for UPGMA clustering of rows      cluster_cols = FALSE,       clustering_method = \"average\", #UPGMA      show_rownames = TRUE,       show_colnames = TRUE,      annotation_row = sirius_annot_filtered, # Dataframe with the rownames are identical with 'mat' and gives annotation      annotation_colors = ann_colors,      cellwidth = 25,      cellheight = 0.05,      treeheight_row = 100,      fontsize_row = 3,      fontsize_col = 15,      scale = 'none',      annotation_names_row = TRUE,     #  labels_row = row_label,      border_color = NA,      color = colorRampPalette(c(\"blue\", \"white\", \"red\"))(100)) dev.off()"},{"path":"https://dlforrister.github.io/ecoMET_webpage/index.html","id":"id_7-chemical-class-enrichment-analysis","dir":"","previous_headings":"","what":"7. Chemical class enrichment analysis","title":"A Tool for Mass Spectrometry–Based Ecological Metabolomics","text":"Biological questions ask class chemical compounds enriched set compounds interest (e.g., DAMs ). analogue Gene Ontology enrichment analysis performed transcriptomics. MMO, NPC Classyfire terms annotated Canopus SIRIUS used perform chemical class enrichment analysis given list features. enrichment score term calculated plot number term significance.","code":"# 7.1. For a single set of features, a detailed enrichment plot can be generated # There are two plotting styles available CanopusListEnrichmentPlot(mmo, DAMs_up$ctrl_vs_sl1.up, pthr = 0.1, outdir = 'plots/enrichment/sl1_up.pdf', height = 6, width = 6) CanopusListEnrichmentPlot_2(mmo, DAMs_up$ctrl_vs_sl1.up, pthr = 0.1, outdir = 'plots/enrichment/sl1_up_2.pdf', topn = 10, height = 6, width = 6) # 7.2. For a list of sets features, a summary enrichment plot can be generated # The summary enrichment plot can be generated for either a single level of CANOPUS classification (8.2.1) or for all levels (8.2.2) # 7.2.1. For a single level of CANOPUS classification term_levels <- c('NPC_class', 'NPC_superclass', 'NPC_pathway', 'ClassyFire_most_specific', 'ClassyFire_level5', 'ClassyFire_subclass', 'ClassyFire_class', 'ClassyFire_superclass') CanopusLevelEnrichmentPlot(mmo, DAMs_up, term_level = 'NPC_class', pthr = 0.1, prefix = 'plots/enrichment/DAMs_up_NPC_class.pdf')   # 7.2.2. For all levels of CANOPUS classification # All levels, or onlt NPC or ClassyFire terms <- c('NPC', 'ClassyFire', 'all_terms') CanopusAllLevelEnrichmentPlot(mmo, DAMs_up, term_level = 'all_terms', pthr = 0.1, prefix = 'plots/enrichment/DAMs_up_all_terms', width = 8, height = 12)"},{"path":"https://dlforrister.github.io/ecoMET_webpage/index.html","id":"id_8-regression-with-metadata","dir":"","previous_headings":"","what":"8. Regression with Metadata","title":"A Tool for Mass Spectrometry–Based Ecological Metabolomics","text":"interested finding anti-herbivore resistive compounds plant metabolome testing whether compounds upregulated insect attack. , first fit linear mixed model amount feature herbivore performance fed plant sample (see metadata). negative effect size model represents resistive value feature. test whether resistive features upregulated (log2FC > 1) plotting effect size LMM log2FC scatter plot. demo file, resistive compounds (neative effect sizes) upregulated, implies plants produce resistive compounds properly response sl attack. analysis can done follows:","code":"# To perform regression, the phenotype of interest should be defined in the metadata as a column # 8.1. Regression of individual feature against a phenotype # model can be 'lm' or 'pearson' or 'lmm' # groups can be a vector of group names, or a single group name which has the phenotpye values in the metadata FeaturePerformanceRegression(mmo, target = '477.0636_7.5687', phenotype = 'sl', groups = c('sl1'),    model = 'lm', normalization = 'Z',    output = paste('plots/phenotype_regression/477.0636_7.5687_sl_lm.pdf'))    # 8.2. Regression of all features against a phenotype and plotting the results  sl.lm <- GetPerformanceFeatureRegression(mmo, phenotype = 'sl', groups = c('sl1'),                                          DAM.list = list(sl.up = DAMs_up$ctrl_vs_sl1.up, sl.down = DAMs_down$ctrl_vs_sl1.down), comparisons = c('ctrl_vs_sl1')) sl.lm.sig <- sl.lm %>% filter(p_value < 0.1) head(sl.lm.sig)  sl.cor <- GetPerformanceFeatureCorrelation(mmo, phenotype = 'sl', groups = c('sl1'),                                          DAM.list = list(sl.up = DAMs_up$ctrl_vs_sl1.up, sl.down = DAMs_down$ctrl_vs_sl1.down), comparisons = c('ctrl_vs_sl1')) sl.cor.sig <- sl.cor %>% filter(p_value < 0.1) head(sl.cor.sig)  # One may want to plot the regression results along with the fold change values PlotFoldchangeResistanceRegression(sl.lm.sig, fold_change = 'ctrl_vs_sl1_log2FC',                                     color = c('sl.up' = '#d42525ff', 'sl.down' = '#281e99ff'),                                     output_dir = 'plots/phenotype_regression/sl_lm_sig.pdf')"},{"path":"https://dlforrister.github.io/ecoMET_webpage/index.html","id":"id_9-chemical-diversity-measures","dir":"","previous_headings":"","what":"9. Chemical Diversity Measures","title":"A Tool for Mass Spectrometry–Based Ecological Metabolomics","text":"chemical diversity one key parameters ecological studies. MMO quantifies chemical diversity idices using idea ChemoDiv package. fingerprint distances treated phylogenetic diversity measuring taxonomic diversity. Alpha diversity can calculated following.","code":"# 9.1. Alpha diversity by Hill numbers # q : Hill number order, 0 for richness, 1 for Shannon, 2 for Simpson # mode : weighted for the chemical structure (use distance argument), unweighted for no chemical weight # filter_feature : if TRUE, only features in the feature_list are used # feature_list : a list of features to filter the alpha diversity calculation alphadiv <- GetAlphaDiversity(mmo, q = 3, normalization = 'Log', mode = 'weighted', distance = 'dreams', filter_feature = FALSE, feature_list = NULL)  # 9.1.1 Plot the alpha diversity ggplot(alphadiv, aes(x = group, y = hill_number)) +   geom_boxplot(outlier.shape = NA) +   geom_beeswarm(size = 0.5) +   theme_classic() +   labs(title = 'Alpha Diversity by Hill Numbers', x = 'Group', y = 'Hill Number') +   theme(legend.position = \"none\", axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) ggsave('plots/alphadiv/dreams_q3_log.pdf', width = 5, height = 5) # Test for significant differences between groups with ANOVA anova <- anova_tukey_dunnett(alphadiv, 'hill_number ~ group') write_anova(anova, 'plots/alphadiv/anova_hill_number.csv') # 9.1.2 Plot the feature distribution # Function to plot histogram of values for each feature for given groups groups <- c('ctrl', 'sl1', 'le1') group.mean <- GetGroupMeans(mmo, normalization = 'Z', filter_feature = FALSE, feature_list = NULL)[,-1] long.group.mean <- data.frame(value = double(), group = character()) for (group in groups) {   group_data <- data.frame(value = group.mean[, group], group = group)   colnames(group_data) <- c('value', 'group')   long.group.mean <- rbind(long.group.mean, group_data) }  ggplot(data = long.group.mean, aes(x = value, fill = group, color = group)) +   geom_density(position = 'identity', alpha = 0) +   theme_classic() +   labs(x = \"Normalized peak intensity\", y = \"Density\") +   # scale_fill_manual(values = custom_colors) +   theme(legend.position = \"right\") ggsave('plots/alphadiv/density_function_Z.pdf', height = 6, width = 6) metadata <- mmo$metadata feature <- mmo$zscore # The distribution should be shown! plot_data <- data.frame(value = double(), rank = double(), sample = character(), group = character()) for (group in groups) {   group_samples <- metadata %>% filter(group == !!group) %>% pull(sample)   for (sample in group_samples) {     sample_data <- unlist(as.vector(feature[, sample]))     sorted_data <- sort(sample_data, decreasing = TRUE)     sample_plot_data <- data.frame(value = sorted_data, rank = seq_along(sorted_data), group = group, sample = sample)     plot_data <- rbind(plot_data, sample_plot_data)   } }    ggplot(plot_data, aes(x = rank, y = value, color = group)) +   stat_summary(fun.data = mean_se, geom = \"errorbar\", width = 0.2, position = position_dodge(width = 0.5), alpha = 0.06) +   stat_summary(fun = mean, geom = \"line\", position = position_dodge(width = 0.5)) +   theme_classic() +   labs(title = \"Sorted Feature\", x = \"Rank\", y = \"Value\") ggsave('plots/alphadiv/sorted_intensity_Z.png', height = 6, width = 6) # 9.2. Beta diversity # Calculate beta diversity for different normalizations and methods # For unweighted beta diversity, Bray-Curtis or Jaccard distance can be used bray <- GetBetaDiversity(mmo, method = 'bray', normalization = 'Log', filter_feature = FALSE, feature_list = NULL) jaccard <- GetBetaDiversity(mmo, method = 'jaccard', normalization = 'Log', filter_feature = FALSE, feature_list = NULL)  # For weighted beta diversity, Generalized UniFrac can be used guni <- GetBetaDiversity(mmo, method = 'Gen.Uni', normalization = 'Log', distance = 'dreams', filter_feature = FALSE, feature_list = NULL) guni.0 <- guni[,,'d_0'] # GUniFrac with alpha 0 guni.05 <- guni[,,'d_0.5'] # GUniFrac with alpha 0.5 guni.1 <- guni[,,'d_1'] # GUniFrac with alpha 1   # 9.2.1. NMDS plots for beta diversity nmds <- metaMDS(guni.05, k = 2, try = 50, trymax = 100) nmds_coords <- as.data.frame(scores(nmds)) groups <- c() for (col in colnames(mmo$feature_data)[-c(1, 2)]) {   groups <- append(groups, metadata[metadata$sample == col, ]$group) } nmds_coords$group <- groups  ggplot(nmds_coords, aes(x = NMDS1, y = NMDS2, color = group)) +       geom_point(size = 3) +       #geom_text_repel(aes(label = group), size = 3) +       theme_classic() +       stat_ellipse(level = 0.90) +       labs(x = \"NMDS1\", y = \"NMDS2\") +       theme(legend.position = \"right\") ggsave('plots/betadiv/NDMS_guni05.pdf', height = 6, width = 6) # 9.2.2. Quantification of beta diversity  group_distances <- CalculateGroupBetaDistance(mmo, beta_div = guni.05, reference_group = 'ctrl', groups = c('le1', 'sl1')) ggplot(group_distances, aes(x = group, y = distance)) +       geom_boxplot(outlier.shape = NA) +       geom_beeswarm(size = 0.5) +       theme_classic() +       labs(x = \"Group\", y = \"Beta Diversity\") ggsave('plots/betadiv/group_dist.pdf', height = 6, width = 6)"},{"path":"https://dlforrister.github.io/ecoMET_webpage/index.html","id":"id_10-exporting-compounds-of-interest","dir":"","previous_headings":"","what":"10. Exporting compounds of interest","title":"A Tool for Mass Spectrometry–Based Ecological Metabolomics","text":"ExportFeaturesToCSV(mmo, feature_list = DAMs_up$ctrl_vs_sl1., normalization = 'None', output_dir = 'output/sl1_up_features.csv')","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/AddChemDist.html","id":null,"dir":"Reference","previous_headings":"","what":"Add chemical distance matrices to the mmo object — AddChemDist","title":"Add chemical distance matrices to the mmo object — AddChemDist","text":"function reads cosine, DREAMS, MS2DeepScore molecular networking outputs mzmine, transform similarity distance adds dissimilarity matrices mmo object.","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/AddChemDist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add chemical distance matrices to the mmo object — AddChemDist","text":"","code":"AddChemDist(mmo, cos_dir = NULL, dreams_dir = NULL, m2ds_dir = NULL)"},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/AddChemDist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add chemical distance matrices to the mmo object — AddChemDist","text":"mmo mmo object cos_dir Path cosine similarity CSV file dreams_dir Path DREAMS similarity CSV file m2ds_dir Path MS2DeepScore similarity CSV file","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/AddChemDist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add chemical distance matrices to the mmo object — AddChemDist","text":"mmo object dissimilarity matrices added (mmo$cos.dissim, mmo$dreams.dissim, mmo$m2ds.dissim)","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/AddCustomAnnot.html","id":null,"dir":"Reference","previous_headings":"","what":"Add custom annotations to an mmo object — AddCustomAnnot","title":"Add custom annotations to an mmo object — AddCustomAnnot","text":"Match features custom DB m/z (ppm) RT (minutes) tolerances attach list-column candidate compound IDs per feature.","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/AddCustomAnnot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add custom annotations to an mmo object — AddCustomAnnot","text":"","code":"AddCustomAnnot(mmo, DB_file, mztol = 5, rttol = 0.5)"},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/AddCustomAnnot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add custom annotations to an mmo object — AddCustomAnnot","text":"mmo mmo object created GetMZmineFeature(). DB_file CSV path least columns compound, mz, rt. mztol m/z tolerance ppm (default 5). rttol RT tolerance minutes (default 0.5).","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/AddCustomAnnot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add custom annotations to an mmo object — AddCustomAnnot","text":"mmo object mmo$custom_annot (id, feature, custom_annot).","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/AddSiriusAnnot.html","id":null,"dir":"Reference","previous_headings":"","what":"Adding annotation from SIRIUS to the mmo object — AddSiriusAnnot","title":"Adding annotation from SIRIUS to the mmo object — AddSiriusAnnot","text":"function reads SIRIUS structure identification formula summary files, adds annotations mmo object.","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/AddSiriusAnnot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adding annotation from SIRIUS to the mmo object — AddSiriusAnnot","text":"","code":"AddSiriusAnnot(mmo, canopus_structuredir, canopus_formuladir)"},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/AddSiriusAnnot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adding annotation from SIRIUS to the mmo object — AddSiriusAnnot","text":"mmo mmo object canopus_structuredir Path SIRIUS structure_identification.tsv file canopus_formuladir Path SIRIUS canopus_formula_summary.tsv file","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/AddSiriusAnnot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adding annotation from SIRIUS to the mmo object — AddSiriusAnnot","text":"mmo object SIRIUS annotations added","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/AnovaBarPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"AnovaBarPlot — AnovaBarPlot","title":"AnovaBarPlot — AnovaBarPlot","text":"function generates bar plots specified feature across different groups metadata, performing ANOVA Tukey's HSD test post-hoc analysis.","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/AnovaBarPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AnovaBarPlot — AnovaBarPlot","text":"","code":"AnovaBarPlot(   mmo,   ID_list,   outdir,   normalization = \"None\",   filter_group = FALSE,   group_list = NULL )"},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/AnovaBarPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"AnovaBarPlot — AnovaBarPlot","text":"mmo mmo object containing metadata feature data ID_list list feature IDs analyze outdir output directory save bar plots ANOVA results normalization normalization method use feature data. Options 'None', 'Log', 'Meancentered', 'Z' (default: 'None') filter_group boolean indicating whether filter feature values specific group list (default: FALSE) group_list list groups filter feature values , filter_group TRUE (default: NULL)","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/CalculateGroupBetaDistance.html","id":null,"dir":"Reference","previous_headings":"","what":"CalculateGroupBetaDistance — CalculateGroupBetaDistance","title":"CalculateGroupBetaDistance — CalculateGroupBetaDistance","text":"function calculates beta diversity distance reference group groups metadata.","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/CalculateGroupBetaDistance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CalculateGroupBetaDistance — CalculateGroupBetaDistance","text":"","code":"CalculateGroupBetaDistance(mmo, beta_div, reference_group, groups)"},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/CalculateGroupBetaDistance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CalculateGroupBetaDistance — CalculateGroupBetaDistance","text":"mmo mmo object containing feature data metadata beta_div beta diversity distance matrix reference_group name reference group compare groups vector group names metadata calculate distances ","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/CalculateGroupBetaDistance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CalculateGroupBetaDistance — CalculateGroupBetaDistance","text":"data frame containing group names, sample names, corresponding beta diversity distances reference group.","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/CanopusAllLevelEnrichmentPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a plot for enrichment analysis of Canopus-predicted terms across all levels — CanopusAllLevelEnrichmentPlot","title":"Generate a plot for enrichment analysis of Canopus-predicted terms across all levels — CanopusAllLevelEnrichmentPlot","text":"function generates plot enrichment analysis Canopus-predicted terms across levels, showing fold enrichment, p-value, subset count term level.","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/CanopusAllLevelEnrichmentPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a plot for enrichment analysis of Canopus-predicted terms across all levels — CanopusAllLevelEnrichmentPlot","text":"","code":"CanopusAllLevelEnrichmentPlot(   mmo = mmo,   comp.list,   terms = \"all_terms\",   term_levels = NULL,   pthr = 0.1,   representation = \"greater\",   prefix = \"enrichment\",   height = 10,   width = 8 )"},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/CanopusAllLevelEnrichmentPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a plot for enrichment analysis of Canopus-predicted terms across all levels — CanopusAllLevelEnrichmentPlot","text":"mmo mmo object sirius annotation normalized data comp.list list analyze, element vector feature names terms terms analyze. Options 'all_terms', 'NPC', 'ClassyFire', 'custom' (default: 'all_terms') term_levels list custom term levels use pthr threshold adjusted p-value considered significant (default: 0.1) representation representation type enrichment analysis. Options 'greater' overrepresentation (default: 'greater') prefix prefix output files (default: 'enrichment') height height output plot inches (default: 10) width width output plot inches (default: 8)","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/CanopusLevelEnrichmentAnal.html","id":null,"dir":"Reference","previous_headings":"","what":"Enrichment analysis for Canopus-predicted terms — CanopusLevelEnrichmentAnal","title":"Enrichment analysis for Canopus-predicted terms — CanopusLevelEnrichmentAnal","text":"function performs enrichment analysis Canopus-predicted terms given list features.","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/CanopusLevelEnrichmentAnal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Enrichment analysis for Canopus-predicted terms — CanopusLevelEnrichmentAnal","text":"","code":"CanopusLevelEnrichmentAnal(   mmo,   list_test,   pthr = 0.1,   sig = TRUE,   term_level = \"NPC_pathway\",   representation = \"greater\" )"},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/CanopusLevelEnrichmentAnal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Enrichment analysis for Canopus-predicted terms — CanopusLevelEnrichmentAnal","text":"mmo mmo object sirius annotation normalized data list_test vector containing names features analyze pthr threshold adjusted p-value considered significant (default: 0.1) sig logical value indicating whether return significant terms (default: TRUE) term_level level term use enrichment analysis Options 'NPC_pathway', 'NPC_superclass', 'NPC_class', 'ClassyFire_superclass', 'ClassyFire_class', 'ClassyFire_subclass', 'ClassyFire_level5', 'ClassyFire_most_specific' (default: 'NPC_pathway') representation representation type enrichment analysis. Options 'greater' overrepresentation (default: 'greater')","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/CanopusLevelEnrichmentAnal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Enrichment analysis for Canopus-predicted terms — CanopusLevelEnrichmentAnal","text":"data frame containing enrichment results, including term level, term name, subset count, total count, fold enrichment, p-value, adjusted p-value (FDR)","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/CanopusLevelEnrichmentPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a plot for enrichment analysis of Canopus-predicted terms at a specific level — CanopusLevelEnrichmentPlot","title":"Generate a plot for enrichment analysis of Canopus-predicted terms at a specific level — CanopusLevelEnrichmentPlot","text":"function generates plot enrichment analysis Canopus-predicted terms specific level, showing fold enrichment, p-value, subset count term.","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/CanopusLevelEnrichmentPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a plot for enrichment analysis of Canopus-predicted terms at a specific level — CanopusLevelEnrichmentPlot","text":"","code":"CanopusLevelEnrichmentPlot(   mmo = mmo,   comp.list,   term_level = \"NPC_pathway\",   pthr = 0.1,   representation = \"greater\",   prefix = \"enrichment\",   height = 5,   width = 5 )"},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/CanopusLevelEnrichmentPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a plot for enrichment analysis of Canopus-predicted terms at a specific level — CanopusLevelEnrichmentPlot","text":"mmo mmo object sirius annotation normalized data comp.list list analyze, element vector feature names term_level level term use enrichment analysis. Options 'NPC_pathway', 'NPC_superclass', 'NPC_class', 'ClassyFire_superclass', 'ClassyFire_class', 'ClassyFire_subclass', 'ClassyFire_level5', 'ClassyFire_most_specific' (default: 'NPC_pathway') pthr threshold adjusted p-value considered significant (default: 0.1) representation representation type enrichment analysis. Options 'greater' overrepresentation (default: 'greater') prefix prefix output files (default: 'enrichment') height height output plot inches (default: 5) width width output plot inches (default: 5)","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/CanopusListEnrichmentPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a plot for enrichment analysis of Canopus-predicted terms — CanopusListEnrichmentPlot","title":"Generate a plot for enrichment analysis of Canopus-predicted terms — CanopusListEnrichmentPlot","text":"function generates plot enrichment analysis Canopus-predicted terms, showing fold enrichment, p-value, subset count term level.","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/CanopusListEnrichmentPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a plot for enrichment analysis of Canopus-predicted terms — CanopusListEnrichmentPlot","text":"","code":"CanopusListEnrichmentPlot(   mmo,   feature_list,   pthr = 0.05,   outdir,   height = 5,   width = 5 )"},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/CanopusListEnrichmentPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a plot for enrichment analysis of Canopus-predicted terms — CanopusListEnrichmentPlot","text":"mmo mmo object sirius annotation normalized data feature_list vector containing names features analyze pthr threshold adjusted p-value considered significant (default: 0.05) outdir output file path enrichment plot height height output plot inches (default: 5) width width output plot inches (default: 5)","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/CanopusListEnrichmentPlot_2.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a plot for enrichment analysis of Canopus-predicted terms across multiple levels — CanopusListEnrichmentPlot_2","title":"Generate a plot for enrichment analysis of Canopus-predicted terms across multiple levels — CanopusListEnrichmentPlot_2","text":"function generates plot enrichment analysis Canopus-predicted terms across multiple levels, showing fold enrichment, p-value, subset count term level.","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/CanopusListEnrichmentPlot_2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a plot for enrichment analysis of Canopus-predicted terms across multiple levels — CanopusListEnrichmentPlot_2","text":"","code":"CanopusListEnrichmentPlot_2(   mmo,   feature_list,   pthr = 0.05,   outdir,   height = 5,   width = 5,   topn = 5 )"},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/CanopusListEnrichmentPlot_2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a plot for enrichment analysis of Canopus-predicted terms across multiple levels — CanopusListEnrichmentPlot_2","text":"mmo mmo object sirius annotation normalized data feature_list vector containing names features analyze pthr threshold adjusted p-value considered significant (default: 0.05) outdir output file path enrichment plot height height output plot inches (default: 5) width width output plot inches (default: 5) topn number top terms display plot (default: 5)","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/ExportFeaturesToCSV.html","id":null,"dir":"Reference","previous_headings":"","what":"ExportFeaturesToCSV — ExportFeaturesToCSV","title":"ExportFeaturesToCSV — ExportFeaturesToCSV","text":"function exports selected features, annotations, pairwise comparisons CSV file.","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/ExportFeaturesToCSV.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ExportFeaturesToCSV — ExportFeaturesToCSV","text":"","code":"ExportFeaturesToCSV(mmo, feature_list, normalization = \"None\", output_dir)"},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/ExportFeaturesToCSV.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ExportFeaturesToCSV — ExportFeaturesToCSV","text":"mmo mmo object containing feature data, annotations, pairwise comparisons feature_list list feature names filter export normalization normalization method use feature data. Options 'None', 'Log', 'Meancentered', 'Z' (default: 'None') output_dir output directory save CSV file","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/FeaturePerformanceRegression.html","id":null,"dir":"Reference","previous_headings":"","what":"FeaturePerformanceRegression — FeaturePerformanceRegression","title":"FeaturePerformanceRegression — FeaturePerformanceRegression","text":"function performs regression analysis specific feature phenotype performance metadata. can use linear mixed models (LMM), simple linear regression (LM), Pearson correlation.","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/FeaturePerformanceRegression.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FeaturePerformanceRegression — FeaturePerformanceRegression","text":"","code":"FeaturePerformanceRegression(   mmo,   target,   phenotype,   groups,   model = \"lmm\",   normalization = \"Z\",   output )"},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/FeaturePerformanceRegression.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FeaturePerformanceRegression — FeaturePerformanceRegression","text":"mmo mmo object feature data metadata target name feature analyze phenotype name phenotype performance metadata groups vector group names metadata containing performance data model type regression model use. Options 'lmm' linear mixed model, 'lm' simple linear regression, 'pearson' Pearson correlation (default: 'lmm') normalization normalization method use feature data. Options 'None', 'Log', 'Meancentered', 'Z' (default: 'Z') output output file path regression plot","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/FeatureToID.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert feature names to IDs in the mmo object — FeatureToID","title":"Convert feature names to IDs in the mmo object — FeatureToID","text":"function converts feature names corresponding IDs mmo object.","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/FeatureToID.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert feature names to IDs in the mmo object — FeatureToID","text":"","code":"FeatureToID(mmo, feature_names)"},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/FeatureToID.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert feature names to IDs in the mmo object — FeatureToID","text":"mmo mmo object feature_names vector feature names convert","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/FeatureToID.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert feature names to IDs in the mmo object — FeatureToID","text":"vector feature IDs corresponding input feature names","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/GenerateHeatmapInputs.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate heatmap inputs from the mmo object — GenerateHeatmapInputs","title":"Generate heatmap inputs from the mmo object — GenerateHeatmapInputs","text":"function generates heatmap inputs mmo object, including fold change mean values, distance matrix, row labels custom-annotated features.","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/GenerateHeatmapInputs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate heatmap inputs from the mmo object — GenerateHeatmapInputs","text":"","code":"GenerateHeatmapInputs(   mmo,   filter_feature = FALSE,   feature_list = NULL,   filter_group = FALSE,   group_list = NULL,   summarize = \"fold_change\",   control_group = \"ctrl\",   normalization = \"None\",   distance = \"dreams\" )"},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/GenerateHeatmapInputs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate heatmap inputs from the mmo object — GenerateHeatmapInputs","text":"mmo mmo object sirius annotation normalized data filter_feature Boolean filter features feature_list (default: FALSE) feature_list vector feature names filter (default: NULL) filter_group Boolean filter groups group_list (default: FALSE) group_list vector group names filter (default: NULL) summarize summarization method use. Options 'fold_change' 'mean' (default: 'fold_change') control_group group use control fold change calculation (default: 'ctrl') normalization normalization method use. Options 'None', 'Log', 'Meancentered', 'Z' distance distance metric use. Options 'dreams', 'cosine', 'm2ds' (default: 'dreams')","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/GenerateHeatmapInputs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate heatmap inputs from the mmo object — GenerateHeatmapInputs","text":"list containing following elements: FC_matrix: matrix fold change mean values dist_matrix: distance matrix based specified distance metric row_label: vector row labels custom-annotated features heatmap_data: data frame containing heatmap data feature IDs values","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/GetAlphaDiversity.html","id":null,"dir":"Reference","previous_headings":"","what":"GetAlphaDiversity — GetAlphaDiversity","title":"GetAlphaDiversity — GetAlphaDiversity","text":"function calculates alpha diversity given mmo object, order Hill number, normalization method, mode (weighted unweighted), distance metric, optional feature filtering.","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/GetAlphaDiversity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GetAlphaDiversity — GetAlphaDiversity","text":"","code":"GetAlphaDiversity(   mmo,   q = 1,   normalization = \"None\",   mode = \"weighted\",   distance = \"dreams\",   filter_feature = FALSE,   feature_list = NULL )"},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/GetAlphaDiversity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GetAlphaDiversity — GetAlphaDiversity","text":"mmo mmo object containing feature data metadata q order Hill number calculate (default: 1) normalization normalization method use feature data. Options 'None', 'Log', 'Meancentered', 'Z' (default: 'None') mode mode diversity calculation. Options 'weighted' 'unweighted' chemical distance(default: 'weighted') distance distance metric use calculating dissimilarity. Options 'dreams', 'm2ds', 'cosine' (default: 'dreams') filter_feature boolean indicating whether filter feature data specific list (default: FALSE) feature_list list feature names filter feature data , filter_feature TRUE (default: NULL)","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/GetAlphaDiversity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GetAlphaDiversity — GetAlphaDiversity","text":"data frame containing alpha diversity group metadata, columns group alpha diversity value.","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/GetBetaDiversity.html","id":null,"dir":"Reference","previous_headings":"","what":"GetBetaDiversity — GetBetaDiversity","title":"GetBetaDiversity — GetBetaDiversity","text":"function calculates beta diversity given mmo object, method (Generalized Unifrac, bray, jaccard, CSCS), normalization method, distance metric, optional feature filtering. returns distance matrix beta diversity values.","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/GetBetaDiversity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GetBetaDiversity — GetBetaDiversity","text":"","code":"GetBetaDiversity(   mmo,   method = \"Gen.Uni\",   normalization = \"None\",   distance = \"dreams\",   filter_feature = FALSE,   feature_list = NULL )"},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/GetBetaDiversity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GetBetaDiversity — GetBetaDiversity","text":"mmo mmo object containing feature data metadata method method beta diversity calculation. Options 'Gen.Uni' Generalized UniFrac, 'bray' Bray-Curtis, 'jaccard' Jaccard, 'CSCS' Compound Similarity Chemical structural compositional similarity (default: 'Gen.Uni') normalization normalization method use feature data. Options 'None', 'Log', 'Meancentered', 'Z' (default: 'None') distance distance metric use calculating dissimilarity. Options 'dreams', 'm2ds', 'cosine' (default: 'dreams') filter_feature boolean indicating whether filter feature data specific list (default: FALSE) feature_list list feature names filter feature data , filter_feature TRUE (default: NULL)","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/GetBetaDiversity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GetBetaDiversity — GetBetaDiversity","text":"distance matrix beta diversity values","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/GetDAMs.html","id":null,"dir":"Reference","previous_headings":"","what":"Get lists of DAMs (Differentially Accumulated Metabolites) for each comparison — GetDAMs","title":"Get lists of DAMs (Differentially Accumulated Metabolites) for each comparison — GetDAMs","text":"function generates lists upregulated downregulated DAMs pairwise comparison mmo object.","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/GetDAMs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get lists of DAMs (Differentially Accumulated Metabolites) for each comparison — GetDAMs","text":"","code":"GetDAMs(mmo, fc_cutoff = 0.5849625, pval_cutoff = 0.05)"},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/GetDAMs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get lists of DAMs (Differentially Accumulated Metabolites) for each comparison — GetDAMs","text":"mmo mmo object pairwise comparison matrix fc_cutoff threshold log2 fold change considered significant (default: 0.5849625, log2(1.5)) pval_cutoff threshold adjusted p-value considered significant (default: 0.05)","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/GetDAMs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get lists of DAMs (Differentially Accumulated Metabolites) for each comparison — GetDAMs","text":"list containing two lists: DAMs_up DAMs_down","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/GetDistanceMat.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the distance matrix from the mmo object based on the specified distance metric — GetDistanceMat","title":"Get the distance matrix from the mmo object based on the specified distance metric — GetDistanceMat","text":"function retrieves distance matrix mmo object based specified distance metric.","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/GetDistanceMat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the distance matrix from the mmo object based on the specified distance metric — GetDistanceMat","text":"","code":"GetDistanceMat(mmo, distance = \"dreams\")"},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/GetDistanceMat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the distance matrix from the mmo object based on the specified distance metric — GetDistanceMat","text":"mmo mmo object distance distance metric use. Options 'dreams', 'cosine', 'm2ds'","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/GetDistanceMat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the distance matrix from the mmo object based on the specified distance metric — GetDistanceMat","text":"distance matrix corresponding specified distance metric","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/GetFunctionalHillNumber.html","id":null,"dir":"Reference","previous_headings":"","what":"GetFunctionalHillNumber — GetFunctionalHillNumber","title":"GetFunctionalHillNumber — GetFunctionalHillNumber","text":"function calculates functional Hill number given mmo object, normalization method, distance metric.","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/GetFunctionalHillNumber.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GetFunctionalHillNumber — GetFunctionalHillNumber","text":"","code":"GetFunctionalHillNumber(   mmo,   normalization = \"None\",   q = 1,   distance = \"dreams\",   filter_feature = FALSE,   feature_list = NULL )"},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/GetFunctionalHillNumber.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GetFunctionalHillNumber — GetFunctionalHillNumber","text":"mmo mmo object containing feature data metadata normalization normalization method use feature data. Options 'None', 'Log', 'Meancentered', 'Z' (default: 'None') q order Hill number calculate (default: 1) distance distance metric use calculating dissimilarity. Options 'dreams', 'm2ds', 'cosine' (default: 'dreams') filter_feature boolean indicating whether filter feature data specific list (default: FALSE) feature_list list feature names filter feature data , filter_feature TRUE (default: NULL)","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/GetFunctionalHillNumber.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GetFunctionalHillNumber — GetFunctionalHillNumber","text":"data frame containing functional Hill number group metadata, columns group hill number.","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/GetGroupMeans.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate group means from the mmo object — GetGroupMeans","title":"Calculate group means from the mmo object — GetGroupMeans","text":"function calculates mean feature values group mmo object.","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/GetGroupMeans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate group means from the mmo object — GetGroupMeans","text":"","code":"GetGroupMeans(   mmo,   normalization = \"None\",   filter_feature = FALSE,   feature_list = NULL,   filter_group = FALSE,   group_list = NULL )"},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/GetGroupMeans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate group means from the mmo object — GetGroupMeans","text":"mmo mmo object normalization normalization method use. Options 'None', 'Log', 'Meancentered', 'Z' filter_feature Boolean filter features based provided list (default: FALSE) feature_list vector feature names filter (default: NULL) filter_group Boolean filter groups based provided list (default: FALSE) group_list vector group names filter (default: NULL)","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/GetGroupMeans.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate group means from the mmo object — GetGroupMeans","text":"data frame containing mean feature values group","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/GetHillNumbers.html","id":null,"dir":"Reference","previous_headings":"","what":"GetHillNumbers — GetHillNumbers","title":"GetHillNumbers — GetHillNumbers","text":"function calculates Hill numbers given mmo object, normalization method, order Hill number.","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/GetHillNumbers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GetHillNumbers — GetHillNumbers","text":"","code":"GetHillNumbers(   mmo,   normalization = \"None\",   q = 0,   filter_feature = FALSE,   feature_list = NULL )"},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/GetHillNumbers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GetHillNumbers — GetHillNumbers","text":"mmo mmo object containing feature data metadata normalization normalization method use feature data. Options 'None', 'Log', 'Meancentered', 'Z' (default: 'None') q order Hill number calculate (default: 0) filter_feature boolean indicating whether filter feature data specific list (default: FALSE) feature_list list feature names filter feature data , filter_feature TRUE (default: NULL)","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/GetHillNumbers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GetHillNumbers — GetHillNumbers","text":"data frame containing Hill number group metadata, columns group hill number.","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/GetLog2FoldChange.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate log2 fold change for a given control group — GetLog2FoldChange","title":"Calculate log2 fold change for a given control group — GetLog2FoldChange","text":"function calculates log2 fold change group compared specified control group.","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/GetLog2FoldChange.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate log2 fold change for a given control group — GetLog2FoldChange","text":"","code":"GetLog2FoldChange(group_means, control_group)"},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/GetLog2FoldChange.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate log2 fold change for a given control group — GetLog2FoldChange","text":"group_means data frame containing mean feature values group control_group name control group compare ","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/GetLog2FoldChange.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate log2 fold change for a given control group — GetLog2FoldChange","text":"data frame log2 fold change values group compared control group","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/GetMZmineFeature.html","id":null,"dir":"Reference","previous_headings":"","what":"Import mzmine feature data and metadata to create a mmo object — GetMZmineFeature","title":"Import mzmine feature data and metadata to create a mmo object — GetMZmineFeature","text":"function reads mzmine feature data metadata specified directories, initiate mmo object containing feature data metadata","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/GetMZmineFeature.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import mzmine feature data and metadata to create a mmo object — GetMZmineFeature","text":"","code":"GetMZmineFeature(mzmine_dir, metadata_dir)"},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/GetMZmineFeature.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import mzmine feature data and metadata to create a mmo object — GetMZmineFeature","text":"mzmine_dir Path mzmine feature data CSV file metadata_dir Path metadata CSV file. metadata file contain columns: sample, group, mass","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/GetMZmineFeature.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import mzmine feature data and metadata to create a mmo object — GetMZmineFeature","text":"mmo object containing feature data metadata","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/GetNormFeature.html","id":null,"dir":"Reference","previous_headings":"","what":"Get feature data from the mmo object, with normalization options — GetNormFeature","title":"Get feature data from the mmo object, with normalization options — GetNormFeature","text":"function retrieves feature data mmo object based specified normalization method.","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/GetNormFeature.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get feature data from the mmo object, with normalization options — GetNormFeature","text":"","code":"GetNormFeature(mmo, normalization = \"None\")"},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/GetNormFeature.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get feature data from the mmo object, with normalization options — GetNormFeature","text":"mmo mmo object normalization normalization method use. Options 'None', 'Log', 'Meancentered', 'Z'","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/GetNormFeature.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get feature data from the mmo object, with normalization options — GetNormFeature","text":"feature data corresponding specified normalization method","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/GetPerformanceFeatureCorrelation.html","id":null,"dir":"Reference","previous_headings":"","what":"GetPerformanceFeatureCorrelation — GetPerformanceFeatureCorrelation","title":"GetPerformanceFeatureCorrelation — GetPerformanceFeatureCorrelation","text":"function calculates Pearson correlation feature specified phenotype performance metadata.","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/GetPerformanceFeatureCorrelation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GetPerformanceFeatureCorrelation — GetPerformanceFeatureCorrelation","text":"","code":"GetPerformanceFeatureCorrelation(   mmo,   phenotype,   groups,   DAM.list,   comparisons,   normalization = \"None\" )"},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/GetPerformanceFeatureCorrelation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GetPerformanceFeatureCorrelation — GetPerformanceFeatureCorrelation","text":"mmo mmo object feature data metadata phenotype name phenotype performance metadata groups vector group names metadata containing performance data DAM.list list DAMs tag features comparisons list pairwise comparisons add fold change columns normalization normalization method use feature data. Options 'None', 'Log', 'Meancentered', 'Z' (default: 'None')","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/GetPerformanceFeatureCorrelation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GetPerformanceFeatureCorrelation — GetPerformanceFeatureCorrelation","text":"data frame containing correlation results feature, including effect size (correlation coefficient), p-value, fold change columns specified comparisons.","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/GetPerformanceFeatureLMM.html","id":null,"dir":"Reference","previous_headings":"","what":"GetPerformanceFeatureLMM — GetPerformanceFeatureLMM","title":"GetPerformanceFeatureLMM — GetPerformanceFeatureLMM","text":"function performs linear mixed model analysis features phenotype performance metadata.","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/GetPerformanceFeatureLMM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GetPerformanceFeatureLMM — GetPerformanceFeatureLMM","text":"","code":"GetPerformanceFeatureLMM(   mmo,   phenotype,   groups,   DAM.list,   comparisons,   normalization = \"Z\" )"},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/GetPerformanceFeatureLMM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GetPerformanceFeatureLMM — GetPerformanceFeatureLMM","text":"mmo mmo object feature data metadata phenotype name phenotype performance metadata groups vector group names metadata containing performance data DAM.list list DAMs tag features comparisons list pairwise comparisons add fold change columns normalization normalization method use feature data. Options 'None', 'Log', 'Meancentered', 'Z' (default: 'Z')","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/GetPerformanceFeatureLMM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GetPerformanceFeatureLMM — GetPerformanceFeatureLMM","text":"data frame containing regression results feature, including effect size, p-value, fold change columns specified comparisons.","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/GetPerformanceFeatureRegression.html","id":null,"dir":"Reference","previous_headings":"","what":"GetPerformanceFeatureRegression — GetPerformanceFeatureRegression","title":"GetPerformanceFeatureRegression — GetPerformanceFeatureRegression","text":"function performs linear regression analysis features phenotype performance metadata.","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/GetPerformanceFeatureRegression.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GetPerformanceFeatureRegression — GetPerformanceFeatureRegression","text":"","code":"GetPerformanceFeatureRegression(   mmo,   phenotype,   groups,   DAM.list,   comparisons,   normalization = \"None\" )"},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/GetPerformanceFeatureRegression.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GetPerformanceFeatureRegression — GetPerformanceFeatureRegression","text":"mmo mmo object feature data metadata phenotype name phenotype performance metadata groups vector group names metadata containing performance data DAM.list list DAMs tag features comparisons list pairwise comparisons add fold change columns normalization normalization method use feature data. Options 'None', 'Log', 'Meancentered', 'Z' (default: 'None')","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/GetPerformanceFeatureRegression.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GetPerformanceFeatureRegression — GetPerformanceFeatureRegression","text":"data frame containing regression results feature, including effect size, p-value, fold change columns specified comparisons.","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/IDToFeature.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert feature IDs to names in the mmo object — IDToFeature","title":"Convert feature IDs to names in the mmo object — IDToFeature","text":"function converts feature IDs corresponding names mmo object.","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/IDToFeature.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert feature IDs to names in the mmo object — IDToFeature","text":"","code":"IDToFeature(mmo, feature_ids)"},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/IDToFeature.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert feature IDs to names in the mmo object — IDToFeature","text":"mmo mmo object feature_ids vector feature IDs convert","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/IDToFeature.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert feature IDs to names in the mmo object — IDToFeature","text":"vector feature names corresponding input feature IDs","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/LogNormalization.html","id":null,"dir":"Reference","previous_headings":"","what":"Log-normalize the peak area in the mmo object — LogNormalization","title":"Log-normalize the peak area in the mmo object — LogNormalization","text":"function applies log2 transformation peak area feature data mmo object.","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/LogNormalization.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log-normalize the peak area in the mmo object — LogNormalization","text":"","code":"LogNormalization(mmo)"},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/LogNormalization.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log-normalize the peak area in the mmo object — LogNormalization","text":"mmo mmo object","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/LogNormalization.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Log-normalize the peak area in the mmo object — LogNormalization","text":"mmo object log-normalized feature data (mmo$log)","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/MassNormalization.html","id":null,"dir":"Reference","previous_headings":"","what":"Use mass in the metadata file to normalize the peak area — MassNormalization","title":"Use mass in the metadata file to normalize the peak area — MassNormalization","text":"function normalizes peak area feature data mmo object mass sample, provided metadata. feature data replaced (original value * mean mass) / sample mass.","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/MassNormalization.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use mass in the metadata file to normalize the peak area — MassNormalization","text":"","code":"MassNormalization(mmo)"},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/MassNormalization.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use mass in the metadata file to normalize the peak area — MassNormalization","text":"mmo mmo object","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/MassNormalization.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use mass in the metadata file to normalize the peak area — MassNormalization","text":"mmo object normalized feature data (mmo$feature_data)","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/MeancenterNormalization.html","id":null,"dir":"Reference","previous_headings":"","what":"Mean-center the peak area in the mmo object — MeancenterNormalization","title":"Mean-center the peak area in the mmo object — MeancenterNormalization","text":"function applies mean-centering peak area feature data mmo object.","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/MeancenterNormalization.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mean-center the peak area in the mmo object — MeancenterNormalization","text":"","code":"MeancenterNormalization(mmo)"},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/MeancenterNormalization.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mean-center the peak area in the mmo object — MeancenterNormalization","text":"mmo mmo object","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/MeancenterNormalization.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mean-center the peak area in the mmo object — MeancenterNormalization","text":"mmo object mean-centered feature data (mmo$meancentered)","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/PLSDAplot.html","id":null,"dir":"Reference","previous_headings":"","what":"PLSDAplot — PLSDAplot","title":"PLSDAplot — PLSDAplot","text":"PLSDAplot","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/PLSDAplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PLSDAplot — PLSDAplot","text":"","code":"PLSDAplot(   mmo,   color,   topk = 10,   outdir,   normalization = \"Z\",   filter_feature = FALSE,   feature_list = NULL,   filter_group = FALSE,   group_list = NULL )"},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/PLSDAplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PLSDAplot — PLSDAplot","text":"mmo mmo object feature data metadata color vector colors groups plot topk number top features display plot (default: 10) outdir output file path PLS-DA plot normalization normalization method use feature data. Options 'None', 'Log', 'Meancentered', 'Z' (default: 'Z') filter_feature Boolean filter features feature_list (default: FALSE) feature_list vector feature names filter (default: NULL) filter_group Boolean filter groups group_list (default: FALSE) group_list vector group names filter (default: NULL)","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/PairwiseComp.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform pairwise comparison between two groups in the mmo object — PairwiseComp","title":"Perform pairwise comparison between two groups in the mmo object — PairwiseComp","text":"function performs pairwise comparison two groups mmo object, calculating log2 fold change adjusted p-values given comparison two groups. function adds results mmo$pairwise data frame.","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/PairwiseComp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform pairwise comparison between two groups in the mmo object — PairwiseComp","text":"","code":"PairwiseComp(mmo, group1, group2, correction = \"BH\")"},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/PairwiseComp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform pairwise comparison between two groups in the mmo object — PairwiseComp","text":"mmo mmo object group1 name nominator group group2 name denominator group correction method multiple comparison correction. Options 'BH', 'holm', 'bonferroni', etc. Inherits p.adjust()","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/PlotFoldchangeResistanceQuad.html","id":null,"dir":"Reference","previous_headings":"","what":"PlotFoldchangeResistanceQuad — PlotFoldchangeResistanceQuad","title":"PlotFoldchangeResistanceQuad — PlotFoldchangeResistanceQuad","text":"function plots fold change resistance quadrant plot, categorizing points quadrants based effect size fold change. also performs binomial test assess distribution points across quadrants.","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/PlotFoldchangeResistanceQuad.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PlotFoldchangeResistanceQuad — PlotFoldchangeResistanceQuad","text":"","code":"PlotFoldchangeResistanceQuad(   performance_regression,   fold_change,   color,   output_dir )"},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/PlotFoldchangeResistanceQuad.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PlotFoldchangeResistanceQuad — PlotFoldchangeResistanceQuad","text":"performance_regression regression results data frame containing effect size, fold change, tag. output GetPerformanceFeatureRegression, GetPerformanceFeatureLMM, GetPerformanceFeatureCorrelation. fold_change name fold change column performance_regression dataframe color vector colors points plot output_dir output file path quadrant plot","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/PlotFoldchangeResistanceRegression.html","id":null,"dir":"Reference","previous_headings":"","what":"PlotFoldchangeResistanceRegression — PlotFoldchangeResistanceRegression","title":"PlotFoldchangeResistanceRegression — PlotFoldchangeResistanceRegression","text":"function plots regression results feature fold change resistance, including regression line, p-value, R-squared value.","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/PlotFoldchangeResistanceRegression.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PlotFoldchangeResistanceRegression — PlotFoldchangeResistanceRegression","text":"","code":"PlotFoldchangeResistanceRegression(   performance_regression,   fold_change,   color,   output_dir )"},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/PlotFoldchangeResistanceRegression.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PlotFoldchangeResistanceRegression — PlotFoldchangeResistanceRegression","text":"performance_regression regression results data frame containing effect size, fold change, tag. output GetPerformanceFeatureRegression, GetPerformanceFeatureLMM, GetPerformanceFeatureCorrelation. fold_change name fold change column performance_regression dataframe color vector colors points plot output_dir output file path regression plot","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/PlotFoldchangeResistanceRegression_t.html","id":null,"dir":"Reference","previous_headings":"","what":"PlotFoldchangeResistanceRegression_t — PlotFoldchangeResistanceRegression_t","title":"PlotFoldchangeResistanceRegression_t — PlotFoldchangeResistanceRegression_t","text":"function plots regression results feature fold change resistance, including regression line, p-value, R-squared value. Transposed version PlotFoldchangeResistanceRegression.","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/PlotFoldchangeResistanceRegression_t.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PlotFoldchangeResistanceRegression_t — PlotFoldchangeResistanceRegression_t","text":"","code":"PlotFoldchangeResistanceRegression_t(   performance_regression,   fold_change,   color,   output_dir )"},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/PlotFoldchangeResistanceRegression_t.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PlotFoldchangeResistanceRegression_t — PlotFoldchangeResistanceRegression_t","text":"performance_regression regression results data frame containing effect size, fold change, tag. output GetPerformanceFeatureRegression, GetPerformanceFeatureLMM, GetPerformanceFeatureCorrelation. fold_change name fold change column performance_regression dataframe color vector colors points plot output_dir output file path regression plot","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/ReplaceZero.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace zero and NA values in the mmo object — ReplaceZero","title":"Replace zero and NA values in the mmo object — ReplaceZero","text":"function replaces zero NA values feature data mmo object.","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/ReplaceZero.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace zero and NA values in the mmo object — ReplaceZero","text":"","code":"ReplaceZero(mmo, method = \"one\")"},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/ReplaceZero.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace zero and NA values in the mmo object — ReplaceZero","text":"mmo mmo object method method use replacement. Options 'one' (replace 1) 'half_mean' (replace half smallest non-zero value row)","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/VolcanoPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Volcano plot for visualizing differential metabolite analysis results — VolcanoPlot","title":"Volcano plot for visualizing differential metabolite analysis results — VolcanoPlot","text":"function generates volcano plot using data mmo$pairwise, highlighting upregulated downregulated features based log2 fold change adjusted p-value","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/VolcanoPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Volcano plot for visualizing differential metabolite analysis results — VolcanoPlot","text":"","code":"VolcanoPlot(   mmo,   comp,   topk = 10,   pthr = 0.05,   outdir = \"volcano.png\",   height = 5,   width = 5 )"},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/VolcanoPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Volcano plot for visualizing differential metabolite analysis results — VolcanoPlot","text":"mmo mmo object pairwise comparison matrix comp comparison visualize, e.g., 'group1_vs_group2 topk number top features label plot (default: 10) pthr threshold adjusted p-value considered significant (default: 0.05) outdir output file path volcano plot (default: 'volcano.png') height height output plot inches (default: 5) width width output plot inches (default: 5)","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/ZNormalization.html","id":null,"dir":"Reference","previous_headings":"","what":"Z-normalize the peak area in the mmo object — ZNormalization","title":"Z-normalize the peak area in the mmo object — ZNormalization","text":"function applies Z-score normalization peak area feature data mmo object.","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/ZNormalization.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Z-normalize the peak area in the mmo object — ZNormalization","text":"","code":"ZNormalization(mmo)"},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/ZNormalization.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Z-normalize the peak area in the mmo object — ZNormalization","text":"mmo mmo object","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/ZNormalization.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Z-normalize the peak area in the mmo object — ZNormalization","text":"mmo object Z-normalized feature data (mmo$zscore)","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/anova_tukey_dunnett.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform ANOVA and Tukey's HSD test on the mmo object — anova_tukey_dunnett","title":"Perform ANOVA and Tukey's HSD test on the mmo object — anova_tukey_dunnett","text":"function performs ANOVA Tukey's HSD test feature data mmo object,","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/anova_tukey_dunnett.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform ANOVA and Tukey's HSD test on the mmo object — anova_tukey_dunnett","text":"","code":"anova_tukey_dunnett(df, formula)"},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/anova_tukey_dunnett.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform ANOVA and Tukey's HSD test on the mmo object — anova_tukey_dunnett","text":"df data frame containing feature data metadata formula formula ANOVA test, e.g., \"feature ~ group\"","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/anova_tukey_dunnett.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform ANOVA and Tukey's HSD test on the mmo object — anova_tukey_dunnett","text":"list containing ANOVA results, Tukey's HSD results, Tukey's significance letters, Dunnett's test results","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/ecomet-internal-imports.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal imports for ecomet — ecomet-internal-imports","title":"Internal imports for ecomet — ecomet-internal-imports","text":"Internal imports ecomet","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/write_anova.html","id":null,"dir":"Reference","previous_headings":"","what":"Write ANOVA and Tukey's HSD results to a CSV file — write_anova","title":"Write ANOVA and Tukey's HSD results to a CSV file — write_anova","text":"function writes results ANOVA Tukey's HSD test CSV file.","code":""},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/write_anova.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write ANOVA and Tukey's HSD results to a CSV file — write_anova","text":"","code":"write_anova(anova_data, outdir, way = \"oneway\")"},{"path":"https://dlforrister.github.io/ecoMET_webpage/reference/write_anova.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write ANOVA and Tukey's HSD results to a CSV file — write_anova","text":"anova_data list containing results ANOVA Tukey's HSD test outdir output directory results saved way type ANOVA test perform. Options 'oneway' 'twoway'","code":""}]
